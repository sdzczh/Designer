{"title":"浅谈NFT的元数据标准","uid":"c818a12081dd186c3b840bc9579f9407","slug":"浅谈NFT的元数据标准/index","date":"2022-03-19T14:38:20.000Z","updated":"2022-03-24T16:28:07.792Z","comments":true,"path":"api/articles/浅谈NFT的元数据标准/index.json","keywords":null,"cover":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>为OpenSea等平台提供资产元数据可以为数字资产提供丰富的数据并轻松地在应用程序中显示它们。给定智能合约上的数字资产通常仅由唯一标识符（例如，ERC721 中的 <code>token_id</code>表示，因此元数据允许这些资产具有其他属性，例如名称、描述和图像。</p>\n<h1 id=\"实现令牌URI\"><a href=\"#实现令牌URI\" class=\"headerlink\" title=\"实现令牌URI\"></a>实现令牌URI</h1><p>为了让 OpenSea 为 ERC721 和 ERC1155 资产提取链下元数据，您的合约需要返回一个 URI，我们可以在其中找到元数据。为了找到这个URI，我们使用ERC721中的方法和ERC1155中的方法。首先，让我们仔细看看Creature 合约中的方法。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;**\n * @dev Returns an URI for a given token ID\n *&#x2F;\nfunction tokenURI(uint256 _tokenId) public view returns (string) &#123;\n  return Strings.strConcat(\n      baseTokenURI(),\n      Strings.uint2str(_tokenId)\n  );\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ERC721 中的函数或ERC1155合约中的函数应返回 HTTP 或 IPFS URL，例如<a href=\"https://opensea-creatures-api.herokuapp.com/api/creature/3%E3%80%82%E6%9F%A5%E8%AF%A2%E6%97%B6%EF%BC%8C%E6%AD%A4\">https://opensea-creatures-api.herokuapp.com/api/creature/3。查询时，此</a> URL 应反过来返回一个 JSON 数据块，其中包含您的令牌的元数据。<br><img src=\"https://files.readme.io/8357ffd-nft-metadata.png\"></p>\n<h1 id=\"元数据结构\"><a href=\"#元数据结构\" class=\"headerlink\" title=\"元数据结构\"></a>元数据结构</h1><p>OpenSea 支持根据官方 ERC721 元数据标准或Enjin 元数据建议构建的元数据。</p>\n<p>此外，我们还支持其他几个允许多媒体附件的属性（包括音频、视频和 3D 模型）以及您的项目的交互式特征，为您提供 OpenSea 市场上的所有排序和过滤功能。</p>\n<p>以下是其中一种 OpenSea 生物的元数据示例：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n  &quot;description&quot;: &quot;Friendly OpenSea Creature that enjoys long swims in the ocean.&quot;, \n  &quot;external_url&quot;: &quot;https:&#x2F;&#x2F;openseacreatures.io&#x2F;3&quot;, \n  &quot;image&quot;: &quot;https:&#x2F;&#x2F;storage.googleapis.com&#x2F;opensea-prod.appspot.com&#x2F;puffs&#x2F;3.png&quot;, \n  &quot;name&quot;: &quot;Dave Starbelly&quot;,\n  &quot;attributes&quot;: [ ... ], \n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<table>\n<thead>\n<tr>\n<th align=\"left\">image</th>\n<th align=\"left\">这是项目图像的 URL。可以是几乎任何类型的图像（包括 SVG，OpenSea 将缓存到 PNG），并且可以是IPFS URL 或路径。我们建议使用 350 x 350 的图像。</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">image_data</td>\n<td align=\"left\">原始 SVG 图像数据，如果您想动态生成图像（不推荐）。仅当您不包含参数时才使用它。</td>\n</tr>\n<tr>\n<td align=\"left\">external_url</td>\n<td align=\"left\">这是显示在 OpenSea 上资产图像下方的 URL，允许用户离开 OpenSea 并在您的站点上查看该项目。</td>\n</tr>\n<tr>\n<td align=\"left\">description</td>\n<td align=\"left\">项目描述。</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\">项目的名称。</td>\n</tr>\n<tr>\n<td align=\"left\">attributes</td>\n<td align=\"left\">这些是项目的属性，将显示在项目的 OpenSea 页面上。</td>\n</tr>\n<tr>\n<td align=\"left\">background_color</td>\n<td align=\"left\">OpenSea 上项目的背景颜色。必须是不带前置 # 的六字符十六进制。</td>\n</tr>\n<tr>\n<td align=\"left\">animation_url</td>\n<td align=\"left\">项目多媒体附件的 URL。支持文件扩展名 GLTF、GLB、WEBM、MP4、M4V、OGV 和 OGG，以及仅音频扩展名 MP3、WAV 和 OGA。</td>\n</tr>\n</tbody></table>\n<p>Animation_url 还支持 HTML 页面，允许您使用 JavaScript 画布、WebGL 等构建丰富的体验和交互式 NFT。现在支持 HTML 页面中的脚本和相对路径。但是，不支持访问浏览器扩展。 |<br>| youtube_url      | YouTube 视频的 URL。                                                                                                                                                                                                                                                 |</p>\n<h1 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h1><p>为了让您的项目更有活力，我们还允许您将自定义“属性”添加到您的元数据中，这些属性将显示在您的每个资产下方。例如，以下是其中一种 OpenSea 生物的属性。<br><img src=\"https://files.readme.io/3df0848-attributes.png\"><br>为了生成这些属性，元数据中包含以下属性数组：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">...\n&#123;\n&quot;attributes&quot;: [\n    &#123;\n      &quot;trait_type&quot;: &quot;Base&quot;, \n      &quot;value&quot;: &quot;Starfish&quot;\n    &#125;, \n    &#123;\n      &quot;trait_type&quot;: &quot;Eyes&quot;, \n      &quot;value&quot;: &quot;Big&quot;\n    &#125;, \n    &#123;\n      &quot;trait_type&quot;: &quot;Mouth&quot;, \n      &quot;value&quot;: &quot;Surprised&quot;\n    &#125;, \n    &#123;\n      &quot;trait_type&quot;: &quot;Level&quot;, \n      &quot;value&quot;: 5\n    &#125;, \n    &#123;\n      &quot;trait_type&quot;: &quot;Stamina&quot;, \n      &quot;value&quot;: 1.4\n    &#125;, \n    &#123;\n      &quot;trait_type&quot;: &quot;Personality&quot;, \n      &quot;value&quot;: &quot;Sad&quot;\n    &#125;, \n    &#123;\n      &quot;display_type&quot;: &quot;boost_number&quot;, \n      &quot;trait_type&quot;: &quot;Aqua Power&quot;, \n      &quot;value&quot;: 40\n    &#125;, \n    &#123;\n      &quot;display_type&quot;: &quot;boost_percentage&quot;, \n      &quot;trait_type&quot;: &quot;Stamina Increase&quot;, \n      &quot;value&quot;: 10\n    &#125;, \n    &#123;\n      &quot;display_type&quot;: &quot;number&quot;, \n      &quot;trait_type&quot;: &quot;Generation&quot;, \n      &quot;value&quot;: 2\n    &#125;\n  ]\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h1 id=\"日期特征\"><a href=\"#日期特征\" class=\"headerlink\" title=\"日期特征\"></a>日期特征</h1><p>OpenSea 还支持. 这种类型的特征将出现在“排名”和“统计”附近的右栏中。传入一个 unix 时间戳（秒）作为值.</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;\n  &quot;display_type&quot;: &quot;date&quot;, \n  &quot;trait_type&quot;: &quot;birthday&quot;, \n  &quot;value&quot;: 1546360800\n&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://files.readme.io/89bee0f-Screen_Shot_2019-10-18_at_7.51.58_PM.png\"></p>\n<h1 id=\"IPFS-和-Arweave-URI\"><a href=\"#IPFS-和-Arweave-URI\" class=\"headerlink\" title=\"IPFS 和 Arweave URI\"></a>IPFS 和 Arweave URI</h1><p>OpenSea 支持将 NFT 元数据存储在分散的文件网络中，因此它们不能被中央方修改。</p>\n<p>如果您使用IPFS来托管元数据，则您的URL应采用<code>ipfs://&lt;hash&gt;</code>. 例如<code>ipfs://QmTy8w65yBXgyfG2ZBg5TrfB2hPjrDQH3RCQFJGkARStJb</code>。</p>\n<p>Arweave的等价物是. 例如<code>ar://&lt;hash&gt;</code>。<br><code>ar://&lt;hash&gt;ar://jK9sR4OrYvODj7PD3czIAyNJalub0-vdV_JAg1NqQ-o</code></p>\n","text":"前言为OpenSea等平台提供资产元数据可以为数字资产提供丰富的数据并轻松地在应用程序中显示它们。给定智能合约上的数字资产通常仅由唯一标识符（例如，ERC721 中的 token_id表示，因此元数据允许这些资产具有其他属性，例如名称、描述和图像。 实现令牌URI为了让 Open...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"NFT","slug":"NFT","count":1,"path":"api/categories/NFT.json"}],"tags":[{"name":"区块链","slug":"区块链","count":10,"path":"api/tags/区块链.json"},{"name":"百科","slug":"百科","count":2,"path":"api/tags/百科.json"},{"name":"NFT","slug":"NFT","count":1,"path":"api/tags/NFT.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E7%8E%B0%E4%BB%A4%E7%89%8CURI\"><span class=\"toc-text\">实现令牌URI</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%83%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84\"><span class=\"toc-text\">元数据结构</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">属性</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%97%A5%E6%9C%9F%E7%89%B9%E5%BE%81\"><span class=\"toc-text\">日期特征</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#IPFS-%E5%92%8C-Arweave-URI\"><span class=\"toc-text\">IPFS 和 Arweave URI</span></a></li></ol>","author":{"name":"Bug Designer","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<p><font face=\"微软雅黑\" color=\"red\"><b>QQ：2510472590</b></font></p><p><b>工作时间12:00 - 02:00</b></p>","socials":{"github":"https://github.com/sdzczh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/zgsdzczh?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"一些简单的 Gas 优化基础","uid":"743b68934be546ac8b4b7cd46c619570","slug":"一些简单的-Gas-优化基础/index","date":"2022-03-24T13:28:30.000Z","updated":"2022-03-24T16:26:30.874Z","comments":true,"path":"api/articles/一些简单的-Gas-优化基础/index.json","keywords":null,"cover":null,"text":"编写智能合约是很难的。不仅是要确保代码没有漏洞，而且你的编写方式还会影响到用户与它交互时的开销。 当你在编译智能合约时，每一行 Solidity 代码都会转换为一系列的操作(操作码)，这些操作都有对应的 gas 消耗。你的目标就是要让你的程序使用尽可能少的操作码(或者用更便宜的)...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"Solidity","slug":"Solidity","count":4,"path":"api/categories/Solidity.json"}],"tags":[{"name":"区块链","slug":"区块链","count":10,"path":"api/tags/区块链.json"},{"name":"百科","slug":"百科","count":2,"path":"api/tags/百科.json"}],"author":{"name":"Bug Designer","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<p><font face=\"微软雅黑\" color=\"red\"><b>QQ：2510472590</b></font></p><p><b>工作时间12:00 - 02:00</b></p>","socials":{"github":"https://github.com/sdzczh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/zgsdzczh?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"通缩分红币Safemoon解读","uid":"0611b829126354c2a4ab4275e956e0b0","slug":"通缩分红币Safemoon解读/index","date":"2022-03-18T16:01:39.000Z","updated":"2022-03-24T16:28:14.304Z","comments":true,"path":"api/articles/通缩分红币Safemoon解读/index.json","keywords":null,"cover":null,"text":"1、Safemoon原理Safemoon是一种通缩分红币，通缩指的是每次转账都会收取一定手续费，这些手续费会直接销毁，进而导致总量的通缩。分红指的是，用户的余额会随着其他用户转账而增加。 Safemoon的基本原理用一个比喻来说就是，将一块固定蛋糕（_tTotal）分给总量会变化...","link":"","photos":[],"count_time":{"symbolsCount":"16k","symbolsTime":"15 mins."},"categories":[{"name":"Solidity","slug":"Solidity","count":4,"path":"api/categories/Solidity.json"}],"tags":[{"name":"区块链","slug":"区块链","count":10,"path":"api/tags/区块链.json"},{"name":"Solidity","slug":"Solidity","count":3,"path":"api/tags/Solidity.json"},{"name":"智能合约","slug":"智能合约","count":2,"path":"api/tags/智能合约.json"}],"author":{"name":"Bug Designer","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<p><font face=\"微软雅黑\" color=\"red\"><b>QQ：2510472590</b></font></p><p><b>工作时间12:00 - 02:00</b></p>","socials":{"github":"https://github.com/sdzczh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/zgsdzczh?type=blog","juejin":"","customs":{}}}}}