{"title":"教你发行BSC链上可分其他代币|含营销钱包|通缩|回流 智能合约","uid":"39ca82df4b5e6da28b6e5b90eb3517e9","slug":"教你发行BSC链上可分其他代币-含营销钱包-通缩-回流-智能合约/index","date":"2022-03-17T18:50:05.000Z","updated":"2022-03-24T16:27:46.168Z","comments":true,"path":"api/articles/教你发行BSC链上可分其他代币-含营销钱包-通缩-回流-智能合约/index.json","keywords":null,"cover":null,"content":"<pre class=\"line-numbers language-none\"><code class=\"language-none\">支持分红SHIB ETH USDT DOGE等BSC所有代币。<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"Remix\"><a href=\"#Remix\" class=\"headerlink\" title=\"Remix\"></a>Remix</h2><p><a href=\"https://remix.ethereum.org/\">https://remix.ethereum.org/</a></p>\n<h2 id=\"编译-开源参数\"><a href=\"#编译-开源参数\" class=\"headerlink\" title=\"编译/开源参数\"></a>编译/开源参数</h2><p>COMPILER: v0.8.4+commit.e28d00a7.js</p>\n<p>Enable optimization: 开启并使用默认值200</p>\n<p>Other Settings: default evmVersion, MIT license</p>\n<h2 id=\"合约核心源码\"><a href=\"#合约核心源码\" class=\"headerlink\" title=\"合约核心源码\"></a>合约核心源码</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">\nconstructor(\n    string memory name_,\n    string memory symbol_,\n    uint256 totalSupply_,\n    address[2] memory addrs, &#x2F;&#x2F; reward, marketing wallet\n    uint256[3] memory feeSettings, &#x2F;&#x2F; rewards, liquidity, marketing\n    uint256 minimumTokenBalanceForDividends_\n) payable ERC20(name_, symbol_) &#123;\n    rewardToken &#x3D; addrs[0];\n    _marketingWalletAddress &#x3D; addrs[1];\n    require(\n        msg.sender !&#x3D; _marketingWalletAddress,\n        &quot;Owner and marketing wallet cannot be the same&quot;\n    );\n    totalSupply_ &#x3D; totalSupply_ * 10**18;\n    tokenRewardsFee &#x3D; feeSettings[0];\n    liquidityFee &#x3D; feeSettings[1];\n    marketingFee &#x3D; feeSettings[2];\n    totalFees &#x3D; tokenRewardsFee.add(liquidityFee).add(marketingFee);\n    require(totalFees &lt;&#x3D; 25, &quot;Total fee is over 25%&quot;);\n    swapTokensAtAmount &#x3D; totalSupply_.mul(2).div(10**6); &#x2F;&#x2F; 0.002%\n\n    &#x2F;&#x2F; use by default 300,000 gas to process auto-claiming dividends\n    gasForProcessing &#x3D; 300000;\n\n    dividendTracker &#x3D; BABYTOKENDividendTracker(\n        payable(Clones.clone(0xD2EE2Be66DD5Dd596469CDbac00b5Ad2554F80ea))\n    );\n    dividendTracker.initialize(\n        rewardToken,\n        minimumTokenBalanceForDividends_\n    );\n\n    IUniswapV2Router02 _uniswapV2Router &#x3D; IUniswapV2Router02(0x10ED43C718714eb63d5aA57B78B54704E256024E);\n    &#x2F;&#x2F; Create a uniswap pair for this new token\n    address _uniswapV2Pair &#x3D; IUniswapV2Factory(_uniswapV2Router.factory())\n        .createPair(address(this), _uniswapV2Router.WETH());\n    uniswapV2Router &#x3D; _uniswapV2Router;\n    uniswapV2Pair &#x3D; _uniswapV2Pair;\n    _setAutomatedMarketMakerPair(_uniswapV2Pair, true);\n\n    &#x2F;&#x2F; exclude from receiving dividends\n    dividendTracker.excludeFromDividends(address(dividendTracker));\n    dividendTracker.excludeFromDividends(address(this));\n    dividendTracker.excludeFromDividends(owner());\n    dividendTracker.excludeFromDividends(address(0xdead));\n    dividendTracker.excludeFromDividends(address(_uniswapV2Router));\n    &#x2F;&#x2F; exclude from paying fees or having max transaction amount\n    excludeFromFees(owner(), true);\n    excludeFromFees(_marketingWalletAddress, true);\n    excludeFromFees(address(this), true);\n    &#x2F;*\n        _mint is an internal function in ERC20.sol that is only called here,\n        and CANNOT be called ever again\n    *&#x2F;\n    _mint(owner(), totalSupply_);\n\n    emit TokenCreated(owner(), address(this), TokenType.baby, VERSION);\n\n    payable(serviceFeeReceiver_).transfer(serviceFee_);\n&#125;\n\nreceive() external payable &#123;&#125;\n\nfunction updateDividendTracker(address newAddress) public onlyOwner &#123;\n    require(\n        newAddress !&#x3D; address(dividendTracker),\n        &quot;BABYTOKEN: The dividend tracker already has that address&quot;\n    );\n\n    BABYTOKENDividendTracker newDividendTracker &#x3D; BABYTOKENDividendTracker(\n        payable(newAddress)\n    );\n\n    require(\n        newDividendTracker.owner() &#x3D;&#x3D; address(this),\n        &quot;BABYTOKEN: The new dividend tracker must be owned by the BABYTOKEN token contract&quot;\n    );\n\n    newDividendTracker.excludeFromDividends(address(newDividendTracker));\n    newDividendTracker.excludeFromDividends(address(this));\n    newDividendTracker.excludeFromDividends(owner());\n    newDividendTracker.excludeFromDividends(address(uniswapV2Router));\n\n    emit UpdateDividendTracker(newAddress, address(dividendTracker));\n\n    dividendTracker &#x3D; newDividendTracker;\n&#125;\n\n \n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n\n<h2 id=\"部署参数\"><a href=\"#部署参数\" class=\"headerlink\" title=\"部署参数\"></a>部署参数</h2><p>Value填写：<code>200000000000000000 </code><br>CONTRACT 选择 <code>Babytoken</code>，<br>name_: <code>BTC COIN (代币名称)</code><br>symbol_: <code>BTC (代币简称)</code><br>totalSupply_: <code>21000000</code> (发行量 发多少就写多少)<br>addds_: <code>[“0x2859e4544C4bB03966803b044A93563Bd2D0DD4D”,”0x2859e4544C4bB03966803b044A93563Bd2D0DD4D”]</code> (要分红的代币合约、营销钱包)<br>feeSettings_: <code>[4,3,1]</code> (分红、流动性、营销钱包)<br>minimumTokenBalanceForDividends_: <code>10000000000000000000000</code> (持有多少代币参与分红。数量后要加18个0)</p>\n<h2 id=\"BSC常用代币合约地址\"><a href=\"#BSC常用代币合约地址\" class=\"headerlink\" title=\"BSC常用代币合约地址\"></a>BSC常用代币合约地址</h2><p>SHIB: <code>0x2859e4544C4bB03966803b044A93563Bd2D0DD4D</code><br>USDT: <code>0x55d398326f99059fF775485246999027B3197955</code><br>ETH:  <code>0x2170Ed0880ac9A755fd29B2688956BD959F933F8</code><br>DOGE: <code>0xbA2aE424d960c26247Dd6c32edC70B295c744C43</code><br>BUSD: <code>0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56</code><br>CAKE: <code>0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82</code></p>\n<p><b>有任何问题请联系QQ：2510472590</b></p>\n","text":"支持分红SHIB ETH USDT DOGE等BSC所有代币。 Remixhttps://remix.ethereum.org/ 编译/开源参数COMPILER: v0.8.4+commit.e28d00a7.js Enable optimization: 开启并使用默认值200...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"发币教程","slug":"发币教程","count":4,"path":"api/categories/发币教程.json"}],"tags":[{"name":"区块链","slug":"区块链","count":12,"path":"api/tags/区块链.json"},{"name":"教程","slug":"教程","count":6,"path":"api/tags/教程.json"},{"name":"BSC","slug":"BSC","count":2,"path":"api/tags/BSC.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Remix\"><span class=\"toc-text\">Remix</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%AF%91-%E5%BC%80%E6%BA%90%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">编译&#x2F;开源参数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%88%E7%BA%A6%E6%A0%B8%E5%BF%83%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">合约核心源码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E5%8F%82%E6%95%B0\"><span class=\"toc-text\">部署参数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#BSC%E5%B8%B8%E7%94%A8%E4%BB%A3%E5%B8%81%E5%90%88%E7%BA%A6%E5%9C%B0%E5%9D%80\"><span class=\"toc-text\">BSC常用代币合约地址</span></a></li></ol>","author":{"name":"Bug Designer","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<p><font face=\"微软雅黑\" color=\"red\"><b>QQ：2510472590</b></font></p><p><b>工作时间12:00 - 02:00</b></p>","socials":{"github":"https://github.com/sdzczh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/zgsdzczh?type=blog","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"代币的防机器人机制","uid":"bbdea3a6ec34b778554399878ace6b88","slug":"代币的防机器人机制/index","date":"2022-03-18T15:50:26.000Z","updated":"2022-03-24T16:27:58.218Z","comments":true,"path":"api/articles/代币的防机器人机制/index.json","keywords":null,"cover":null,"text":"solidity防机器人有两种方式一种是根据判断在几区块，另外一种是根据时间来检测 先用第一种判断时间来检测机器人，照例用以前的代码再新加判断机器人的逻辑 &#x2F;&#x2F; SPDX-License-Identifier: MIT pragma solidity ^0.6...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"Solidity","slug":"Solidity","count":5,"path":"api/categories/Solidity.json"}],"tags":[{"name":"区块链","slug":"区块链","count":12,"path":"api/tags/区块链.json"},{"name":"Solidity","slug":"Solidity","count":5,"path":"api/tags/Solidity.json"}],"author":{"name":"Bug Designer","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<p><font face=\"微软雅黑\" color=\"red\"><b>QQ：2510472590</b></font></p><p><b>工作时间12:00 - 02:00</b></p>","socials":{"github":"https://github.com/sdzczh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/zgsdzczh?type=blog","juejin":"","customs":{}}}},"next_post":{"title":"Linux常见命令","uid":"b0741c11219613863ac494c737cd8897","slug":"Linux常见命令/index","date":"2022-03-16T17:39:07.000Z","updated":"2022-03-24T16:26:38.574Z","comments":true,"path":"api/articles/Linux常见命令/index.json","keywords":null,"cover":null,"text":"1.常见操作命令cd home, cd home&#x2F;tomcat # 定位到某个目录 cd ..&#x2F; # 回到上一层目录 ls # 显示当前文件夹下的文件 tab键 # 自动完成 mkdir 文件夹名 # 新建文件夹 mv 旧名称 新名称 # 移动文件，也可以用来...","link":"","photos":[],"count_time":{"symbolsCount":"1.3k","symbolsTime":"1 mins."},"categories":[{"name":"操作系统","slug":"操作系统","count":1,"path":"api/categories/操作系统.json"}],"tags":[{"name":"Linux","slug":"Linux","count":1,"path":"api/tags/Linux.json"}],"author":{"name":"Bug Designer","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"<p><font face=\"微软雅黑\" color=\"red\"><b>QQ：2510472590</b></font></p><p><b>工作时间12:00 - 02:00</b></p>","socials":{"github":"https://github.com/sdzczh","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/zgsdzczh?type=blog","juejin":"","customs":{}}}}}